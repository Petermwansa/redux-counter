{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/React/React Developer Course/redux-counter/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { counterActions } from '../store';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // this dispatches an action against the redux store no args required \n  const dispatch = useDispatch();\n\n  // we use the useselector to retrive a part of the overrall obj \n  //redux will automatically set up a subscription to the store through this comp when you use useSelector\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const increaseHandler = () => {\n    dispatch({\n      type: 'increase',\n      amount: 10\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: 'decrement'\n    });\n  };\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: 'toggle'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Add 10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Counter;\nexport default Counter;\n\n// // here we work with class based comps \n// class Counter extends Component {\n\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement()\n//   }\n\n//   toggleCounterHandler() {\n\n//   }\n\n//   render () {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.decrementHandler.bind()}>-</button>\n//           <button onClick={this.incrementHandler.bind()}>+</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler.bind()}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// // this maps the redux state to props \n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({ type: 'increment'}),\n//     decrement: () => dispatch({ type: 'decrement'}),\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useDispatch","useSelector","counterActions","classes","jsxDEV","_jsxDEV","Counter","_s","dispatch","counter","state","show","showCounter","incrementHandler","increment","increaseHandler","type","amount","decrementHandler","toggleCounterHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/React/React Developer Course/redux-counter/src/components/Counter.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { counterActions } from '../store';\n\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  // this dispatches an action against the redux store no args required \n  const dispatch = useDispatch();\n\n  // we use the useselector to retrive a part of the overrall obj \n  //redux will automatically set up a subscription to the store through this comp when you use useSelector\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter)\n\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment())\n  }\n\n  const increaseHandler = () => {\n    dispatch({ type: 'increase', amount: 10})\n  }\n\n  const decrementHandler = () => {\n    dispatch({ type: 'decrement'})\n  }\n\n  const toggleCounterHandler = () => {\n    dispatch({ type: 'toggle'})\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={decrementHandler}>-</button>\n        <button onClick={increaseHandler}>Add 10</button>\n        <button onClick={incrementHandler}>+</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\n\nexport default Counter;\n\n\n// // here we work with class based comps \n// class Counter extends Component {\n\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n\n//   decrementHandler() {\n//     this.props.decrement()\n//   }\n\n//   toggleCounterHandler() {\n\n//   }\n\n//   render () {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.decrementHandler.bind()}>-</button>\n//           <button onClick={this.incrementHandler.bind()}>+</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler.bind()}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// // this maps the redux state to props \n// const mapStateToProps = state => {\n//   return {\n//     counter: state.counter\n//   };\n// }\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     increment: () => dispatch({ type: 'increment'}),\n//     decrement: () => dispatch({ type: 'decrement'}),\n//   }\n// }\n\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}