{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/React/React Developer Course/redux-counter/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // this dispatches an action against the redux store no args required \n  const dispatch = useDispatch();\n\n  // we use the useselector to retrive a part of the overrall obj \n  //redux will automatically set up a subscription to the store through this comp when you use useSelector\n  const counter = useSelector(state => state.counter);\n  const incrementHandler = () => {\n    dispatch({\n      type: 'increment'\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: 'decrement'\n    });\n  };\n  const toggleCounterHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n// here we work with class based comps \n_s(Counter, \"gthwM6sqboLtlTmr2wLRFX51eJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Counter;\nclass Counterr extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }\n  decrementHandler() {\n    this.props.decrement;\n  }\n  toggleCounterHandler() {}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.decrementHandler.bind(),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.incrementHandler.bind(),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\n// this maps the redux state to props \nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: 'incerement'\n    }),\n    decrement: () => dispatch({\n      type: 'decrement'\n    })\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counterr);\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useDispatch","useSelector","connect","classes","Component","jsxDEV","_jsxDEV","Counter","_s","dispatch","counter","state","incrementHandler","type","decrementHandler","toggleCounterHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","Counterr","props","increment","decrement","render","bind","mapStateToProps","mapDispatchToProps","$RefreshReg$"],"sources":["/Users/user/Desktop/React/React Developer Course/redux-counter/src/components/Counter.js"],"sourcesContent":["import { useDispatch, useSelector, connect } from 'react-redux';\n\nimport classes from './Counter.module.css';\nimport { Component } from 'react';\n\nconst Counter = () => {\n  // this dispatches an action against the redux store no args required \n  const dispatch = useDispatch();\n\n  // we use the useselector to retrive a part of the overrall obj \n  //redux will automatically set up a subscription to the store through this comp when you use useSelector\n  const counter = useSelector(state => state.counter);\n\n\n  const incrementHandler = () => {\n    dispatch({ type: 'increment'})\n  }\n\n  const decrementHandler = () => {\n    dispatch({ type: 'decrement'})\n  }\n\n  const toggleCounterHandler = () => {};\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button onClick={decrementHandler}>-</button>\n        <button onClick={incrementHandler}>+</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\n\n\n// here we work with class based comps \nclass Counterr extends Component {\n\n  incrementHandler() {\n    this.props.increment();\n  }\n\n  decrementHandler() {\n    this.props.decrement\n  }\n\n  toggleCounterHandler() {\n\n  }\n\n  render () {\n    return (\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={this.decrementHandler.bind()}>-</button>\n          <button onClick={this.incrementHandler.bind()}>+</button>\n        </div>\n        <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n// this maps the redux state to props \nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({ type: 'incerement'}),\n    decrement: () => dispatch({ type: 'decrement'}),\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counterr);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}