{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {},\n    toggleCounter() {}\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    // when working with redux, NEVER mutate state like this below\n    // state.counter++;\n    //always COPY AND RETURN NEW DATA \n    // the obj return overrides the exixting state and not merge it \n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\n\n// we connect the app to the store by exporting the store \nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","toggleCounter","counterReducer","type","amount","store"],"sources":["/Users/user/Desktop/React/React Developer Course/redux-counter/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit'; \n\nconst initialState = { counter: 0, showCounter: true}\n\ncreateSlice({\n    name: 'counter',\n    initialState: initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {},\n        toggleCounter() {},\n    }\n});\n\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        // when working with redux, NEVER mutate state like this below\n        // state.counter++;\n        //always COPY AND RETURN NEW DATA \n        // the obj return overrides the exixting state and not merge it \n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        }\n    }\n\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        }\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        }\n    }\n\n    return state;\n}\n\n\nconst store = createStore(counterReducer);\n\n// we connect the app to the store by exporting the store \nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAErDH,WAAW,CAAC;EACRI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE,CAAC,CAAC;IAC1BC,aAAaA,CAAA,EAAG,CAAC;EACrB;AACJ,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAACL,KAAK,GAAGN,YAAY,EAAES,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACG,IAAI,KAAK,WAAW,EAAE;IAC7B;IACA;IACA;IACA;IACA,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAGA,IAAIO,MAAM,CAACG,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACI,MAAM;MACtCX,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAIO,MAAM,CAACG,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAIO,MAAM,CAACG,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHV,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACnB,CAAC;EACL;EAEA,OAAOK,KAAK;AAChB,CAAC;AAGD,MAAMQ,KAAK,GAAGhB,WAAW,CAACa,cAAc,CAAC;;AAEzC;AACA,eAAeG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}